CREATE TABLE USERS (
 USER_ID        INT NOT NULL PRIMARY KEY,
 ID            VARCHAR(20) NOT NULL,
 PASSWORD      VARCHAR(200) NOT NULL,
 CREATE_AT     DATE
)
ALTER TABLE USERS DROP COLUMN USERID;
ALTER TABLE USERS ADD USERID LONG NOT NULL; -- PRIMARY KEY 는  LONG TYPE 을 사용하지 못한다.
ALTER TABLE USERS MODIFY USERID INT; --TYPE 변경
ALTER TABLE USERS MODIFY (PASSWORD NOT NULL) -- 포맷 변경
ALTER TABLE USERS ADD CONSTRAINT USER_PK PRIMARY KEY (USERID);--(기존컬럼,추가컬럼)
DESC USERS; -- 테이블 구조 확인 명령어

INSERT INTO USERS VALUES ('HJN4030','1111',CURRENT_TIMESTAMP,'1')


 #  UPDATED_AT DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP

CREATE TABLE TOKEN (
 USER_ID              INT NOT NULL ,
 TOKEN_ID             INT NOT NULL PRIMARY KEY,
 REFRESH_TOKEN        VARCHAR(500) NOT NULL,
 CREATED_AT           DATE NOT NULL
);



---

CREATE TABLE VOTE (
 USER_ID          INT NOT NULL ,
 VOTE_ID          INT NOT NULL PRIMARY KEY,
 CONTENT         VARCHAR(600) NOT NULL,
 FIRST_ANSWER     VARCHAR(100) NOT NULL,
 SECOND_ANSWER    VARCHAR(100) NOT NULL,
 CREATE_AT DATE  NOT NULL,
 UPDATE_AT DATE
)

--ALTER TABLE VOTE ADD UPDATE_AT TIMESTAMP;
ALTER TABLE VOTE MODIFY CREATE_AT DATE; --TYPE 변경
ALTER TABLE VOTE MODIFY UPDATE_AT DATE; --TYPE 변경

CREATE TABLE VOTE_ANSWER (
 VOTE_ID         INT NOT NULL,
 VOTE_ANSWER_ID        INT NOT NULL PRIMARY KEY,
 FIRST_ANSWER_COUNT     INT DEFAULT 0 NOT NULL ,
 SECOND_ANSWER_COUNT    INT DEFAULT 0 NOT NULL
 )

CREATE TABLE MY_VOTE_ANSWER (
MY_VOTE_ID INT NOT NULL PRIMARY KEY,
VOTE_ID INT NOT NULL,
USER_ID INT NOT NULL,
CHK VARCHAR(20) NOT NULL
)


DELETE FROM VOTE;
INSERT INTO VOTE VALUES ('1','1','컨텐츠','1번대답','2번대답',CURRENT_TIMESTAMP,'');

-- NLS 설정 확인 명령어 (NLS_SESSION_PARAMETERS 뷰에서 확인)
SELECT * FROM NLS_SESSION_PARAMETERS;

-- 명령어로 변경하기(SESSION 설정 변경)
-- 'NLS_DATE_FORMAT =' 다음에 원하는 DATE_FORMAT을 넣어주면 됩니다.
ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD HH24:MI:SS';






CREATE TABLE SUPPLIER
(
  SUPPLIER_ID NUMERIC(10) NOT NULL,
  SUPPLIER_NAME VARCHAR2(50) NOT NULL,
  CONTACT_NAME VARCHAR2(50),
  CONSTRAINT SUPPLIER_PK PRIMARY KEY (SUPPLIER_ID)
);

-- SEQUENCE 생성
CREATE SEQUENCE USER_SEQ
  INCREMENT BY 1
  START WITH 0
  MAXVALUE 999999
  MINVALUE 0
  NOCYCLE
  CACHE 20;

CREATE SEQUENCE VOTE_SEQ
  INCREMENT BY 1
  START WITH 0
  MAXVALUE 999999
  MINVALUE 0
  NOCYCLE
  CACHE 20;

CREATE SEQUENCE MY_VOTE_ANSWER_SEQ
  INCREMENT BY 1
  START WITH 0
  MAXVALUE 999999
  MINVALUE 0
  NOCYCLE
  CACHE 20;

CREATE SEQUENCE VOTE_ANSWER_SEQ
  INCREMENT BY 1
  START WITH 0
  MAXVALUE 999999
  MINVALUE 0
  NOCYCLE
  CACHE 20;



















  ----
          INSERT INTO vote
          ( USERID, VOTEID, CONTENT, FIRSTANSWER, SECONDANSWER, CREATE_AT, UPDATE_AT )
          VALUES
          (  '1', voteSeq.NEXTVAL ,'컨탠츠','컨1','컨2', sysdate, '')
---

 INSERT INTO vote ( USERID, VOTEID, CONTENT, FIRSTANSWER, SECONDANSWER, CREATE_AT, UPDATE_AT ) VALUES (  '1', voteSeq.NEXTVAL ,'컨탠츠','컨1','컨2', sysdate, '')
  ---
          INSERT INTO voteanswer
          (  VOTEID, VOTEANSWERID, FIRSTANSWERCOUNT, SECONDANSWERCOUNT )
          VALUES
          ( '0', VOTEANSWERSEQ.NEXTVAL , 0, 0)
  ---
          insert into myvoteanswer
          (MYVOTEID, VOTEID, USERID, CHK)
          values
          (MYVOTEANSWERSEQ.NEXTVAL, 0, 1, 'first')


          ----

SELECT A.*, B.* FROM VOTE A LEFT JOIN VOTEANSWER B ON A.VOTEID = B.VOTEID WHERE A.VOTEID = 0;