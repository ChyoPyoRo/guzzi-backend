<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="guzzi.project.mapper.VoteMapper">
    <select id="findVoteAll" resultType="guzzi.project.DTO.votePostDto">
        SELECT
            USER_ID,
            VOTE_ID,
            CREATE_AT,
            CONTENT,
            FIRST_ANSWER,
            SECOND_ANSWER
        FROM
            vote
    </select>
    <insert id="createVote">
        INSERT INTO VOTE
            (user_id, content,
            first_answer,
            second_answer, )
        VALUES
            (
             #{vote.USER_ID},
             #{vote.CONTENT, jdbcType=VARCHAR},
             #{vote.FIRST_ANSWER, jdbcType=VARCHAR},
             #{vote.SECOND_ANSWER, jdbcType=VARCHAR}
            )
    </insert>
    <select id="getVoteOne" parameterType="java.util.Map" resultType="java.util.Map">
                SELECT
            A.FIRST_RATIO
            , A.SECOND_RATIO
            ,(A.FIRST_ANSWER_COUNT + A.SECOND_ANSWER_COUNT) as TOTAL_ANSWER_COUNT
            , (SELECT NVL(CHK, 'none') FROM MY_VOTE_ANSWER
                        WHERE USER_ID = 0 and VOTE_ID = B.VOTE_ID) AS CHK
            , B.USER_ID
            , B.VOTE_ID
            , B.CONTENT
            , B.FIRST_ANSWER
            , B.SECOND_ANSWER
        FROM VOTE_ANSWER A
            LEFT JOIN VOTE B
            ON A.VOTE_ID = B.VOTE_ID
        WHERE A.VOTE_ID = #{VOTEID}
    </select>
    <select id="getVoteList" parameterType="java.util.Map" resultType="java.util.HashMap">
        SELECT
<!--        B.ROW_NUM,-->
            D.FIRST_RATIO
            , D.SECOND_RATIO
            , (D.FIRST_ANSWER_COUNT + D.SECOND_ANSWER_COUNT) as TOTAL_ANSWER_COUNT
            , NVL(
                    (SELECT CHK FROM MY_VOTE_ANSWER WHERE USER_ID = 0 and VOTE_ID = B.VOTE_ID)
                    , 'none'
                ) AS CHK
            , B.USER_ID
            , B.VOTE_ID
            , B.CONTENT
            , B.FIRST_ANSWER
            , B.SECOND_ANSWER
        FROM VOTE_ANSWER D
            LEFT JOIN (
                    SELECT
                    ROW_NUMBER() OVER (ORDER BY C.CREATE_AT DESC) AS ROW_NUM
                    , C.*
                    FROM VOTE C) B
                    ON D.VOTE_ID = B.VOTE_ID
        WHERE 1 = 1
        AND B.ROW_NUM > #{startIdx}
        AND B.ROW_NUM <![CDATA[ <= ]]> #{endIdx}
    </select>
    <select id="getTotalVoteCnt" resultType="int">
        select count(*) from vote
    </select>
</mapper>
